<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/popup.css">
    <link rel="stylesheet" href="/style.css">
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <select name="" id="selectBox">
        <option value="">1시 버스</option>
        <option value="">2시 버스</option>
        <option value="">3시 버스</option>
    </select>
    <div id="content">
    </div>
</body>
<script src="/popup.js"></script>
<script>
    const socket = io.connect();
    let selectIndex = 0;
    socket.on("reRender", (data) => {
        if (data.index === selectIndex) {
            const { selectIndex: { x, y } } = data;
            const target = document.querySelector(`div[data-x="${x}"][data-y="${y}"]`) // "div[class='on']"
            target.classList.add("disable");
            target.classList.remove("enable");
            target.onclick = null;
        }
        // const target = document.querySelectorAll(".seat");
        // const { selectIndex } = data;
        // target[selectIndex].classList.remove("enable");
        // target[selectIndex].classList.add("disable");
        // target[selectIndex].onclick = null;
    })

    const popup = new Popup("예매 하시겠습니까?");

    const handlerClickBtn2 = () => {
        console.log("취소 버튼")
    }

    const handlerClickSeat = (e) => {
        popup.open();
        const x = e.target.getAttribute("data-x");
        const y = e.target.getAttribute("data-y");
        const handlerClickBtn = () => {
            socket.emit("reserve", { selectIndex: { x, y }, index: selectIndex });
        }
        popup.addEventListener(handlerClickBtn, handlerClickBtn2)
    }

    const renderSeats = async (index) => {
        content.innerHTML = "";
        console.log(index);
        const { data } = await axios.get(`/seats/${index}`) // 응답받은 data = await axios로 보낸 요청주소
        console.log(data);
        data.forEach((line, indexY) => {
            let lineElement = document.createElement("div");
            lineElement.classList.add("line");

            line.forEach((el, indexX) => {
                let seatElement = document.createElement("div");
                seatElement.classList.add("seat");
                // setAttribute 요소에 속성을 추가하는 메서드 id class
                seatElement.setAttribute("data-x", indexX)
                seatElement.setAttribute("data-y", indexY)
                if (el === 1) {
                    seatElement.classList.add("enable");
                    seatElement.onclick = (e) => { handlerClickSeat(e) };
                } else if (el === 2) {
                    seatElement.classList.add("disable");
                }
                lineElement.append(seatElement);
            });
            content.append(lineElement);
        });
    }

    selectBox.onchange = function () {
        // this.selectIndex -> 선택되어있는 index번호
        // 0 1 2 [ㅇ,ㅇ,ㅇ]
        selectIndex = this.selectedIndex;
        renderSeats(selectIndex);
    }
    renderSeats(0);
</script>

</html>